<?xml version="1.0" encoding="utf-8"?>
<!--
 ~ The MIT License
 ~
 ~ Copyright (c) 2011-2016, CloudBees, Inc., Stephen Connolly.
 ~
 ~ Permission is hereby granted, free of charge, to any person obtaining a copy
 ~ of this software and associated documentation files (the "Software"), to deal
 ~ in the Software without restriction, including without limitation the rights
 ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 ~ copies of the Software, and to permit persons to whom the Software is
 ~ furnished to do so, subject to the following conditions:
 ~
 ~ The above copyright notice and this permission notice shall be included in
 ~ all copies or substantial portions of the Software.
 ~
 ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 ~ THE SOFTWARE.
 -->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:l="/lib/layout"
         xmlns:f="/lib/form" xmlns:t="/lib/hudson" xmlns:dd="/lib/layout/dropdowns">
  <st:documentation>
    A <code>select</code> control that supports the data binding and AJAX updates with support for adding credentials.
    Your descriptor should have the 'doFillXyzItems' method, which returns a StandardListBoxModel
    representation of the credentials in your drop-down list box, and your instance field should
    hold the current value.

    <st:attribute name="clazz">
      Additional CSS classes that the control gets.
    </st:attribute>
    <st:attribute name="field">
      Used for databinding.
    </st:attribute>
    <st:attribute name="default">
      The default value of the text box, in case both @value is and 'instance[field]' is null.
    </st:attribute>
    <st:attribute name="expressionAllowed">
      If expressions are allowed then the user can choose between a select drop down and entering an expression.
    </st:attribute>
    <st:attribute name="includeUser">
      If the user's scoped stores should be included
    </st:attribute>
    <st:attribute name="includeUserCaution">
      Feature flag: show a checkbox and caution message for including user's scoped stores.
      This is useful on forms controlled by other users.
    </st:attribute>
    <st:attribute name="context">
      The context within which to look up the stores. (defaults to <code>it</code> (jelly) / <code>my</code> (groovy))
    </st:attribute>
    <st:attribute name="checkMethod">
      Specify <code>post</code> if a <code>doCheckXXX</code> method is <code>@RequirePOST</code>
      (for example because it checks <code>CredentialsProvider.USE_ITEM</code> permission).
    </st:attribute>
  </st:documentation>
  <f:prepareDatabinding/>
  <j:set var="value" value="${attrs.value ?: instance[attrs.field] ?: attrs.default}" />
  <j:set var="paramValue" value="${attrs.expressionAllowed and value.startsWith('${') and value.endsWith('}')}"/>
  <j:set var="paramDefault" value="${attrs.expressionAllowed and attrs.default.startsWith('${') and attrs.default.endsWith('}')}"/>
  <j:set var="selectHelper" value="${app.getDescriptorByName('com.cloudbees.plugins.credentials.CredentialsSelectHelper')}"/>
  <j:set var="includeUser" value="${attrs.includeUser ? true : false}"/>
  <j:set var="context" value="${selectHelper.resolveContext(attrs.context ?: it)}"/>
  <div class="credentials-select-control">
    <j:if test="${attrs.expressionAllowed}">
      <label field-disabled="true">
        <input type="radio" name="${attrs.name ?: '_.'+attrs.field}" value="select"
               class="credentials-select-radio-control" checked="${paramValue?null:'true'}"/>
        ${%fixedSelection}
      </label>
      <label field-disabled="true">
        <input type="radio" name="${attrs.name ?: '_.'+attrs.field}" value="param"
               class="credentials-select-radio-control" checked="${paramValue?'true':null}"/>
        ${%paramExpression}
      </label>
    </j:if>
    <div field-disabled="${paramValue?'true':null}"
         class="credentials-select-content-select ${paramValue?'credentials-select-content-inactive':'credentials-select-content-active'}">
      <j:choose>
        <j:when test="${includeUser and attrs.includeUserCaution}">
          <div class="include-user-credentials jenkins-form-item jenkins-form-item--tight">
            <div class="jenkins-checkbox-help-wrapper">
              <span class="jenkins-checkbox">
                <input type="checkbox"
                       name="includeUser"
                />
                <label class="attach-previous" field-disabled="true">${%includeUserCredentials}</label>
              </span>
              <span class="help-btn"><t:help href="#" /></span>
            </div>
            <div class="help">
              <p>${%includeUserCredentialsHelp}</p>
              <div class="from-plugin">
                (from <a href="https://plugins.jenkins.io/credentials">Credentials Plugin</a>)
              </div>
            </div>
            <div class="warning user-credentials-caution" hidden="hidden">
              ${%userCredentialsCaution}
            </div>
          </div>
        </j:when>
        <j:otherwise>
          <input type="hidden" name="includeUser" value="${includeUser}"/>
        </j:otherwise>
      </j:choose>
      <f:select clazz="${attrs.clazz} credentials-select" field="${attrs.field}"
                default="${paramDefault?'':attrs.default}" value="${paramValue?(paramDefault?'':attrs.default):value}"
                checkMethod="${attrs.checkMethod}"/>
      <!-- TODO  add support for checking permissions against stores in request path -->
      <j:set var="storeItems" value="${selectHelper.getStoreItems(context, includeUser)}"/>
      <j:choose>
        <j:when test="${selectHelper.hasCreatePermission(context, includeUser) and storeItems != null and !storeItems.isEmpty()}">
          <l:overflowButton icon="symbol-add"
                            text="${%Add}"
                            tooltip="${null}"
                            clazz="jenkins-!-margin-top-2 credentials-add-menu">
            <j:forEach var="storeItem" items="${storeItems}">
              <dd:custom>
                <button class="jenkins-dropdown__item"
                        tooltip="${storeItem.description}"
                        data-type="credentials-add-store-item"
                        data-url="${request.contextPath}/${storeItem.url}/dialog"
                        disabled="${storeItem.enabled ? null : true}">
                  <div class="jenkins-dropdown__item__icon">
                    <l:icon src="${storeItem.iconClassName} icon-sm" />
                  </div>
                  ${storeItem.displayName}
                </button>
              </dd:custom>
            </j:forEach>
          </l:overflowButton>
        </j:when>
        <j:otherwise>
          <button class="jenkins-button credentials-add jenkins-!-margin-top-2"
                  type="button">
            <l:icon src="symbol-add"/>
            ${%Add}
          </button>
        </j:otherwise>
      </j:choose>
    </div>
    <j:if test="${attrs.expressionAllowed}">
      <div class="credentials-select-content-param ${paramValue?'credentials-select-content-active':'credentials-select-content-inactive'}">
        <f:textbox value="${paramValue?value:(paramDefault?attrs.default:'')}" clazz="${attrs.clazz} credentials-select"
                   field="${attrs.field}" default="${paramDefault?attrs.default:''}"/>
        <div class="error" style="display:none;">
          ${%invalidExpression}
        </div>
      </div>
    </j:if>
  </div>
  <st:adjunct includes="lib.credentials.select.select"/>
</j:jelly>
